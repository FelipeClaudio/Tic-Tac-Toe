# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "bba6c3e6-1801-4a49-aa93-d523411c6e07"
  imageRepository: "tictactoe"
  containerRegistry: "fcsstictactoe.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Test
        steps:
          - task: Npm@1
            displayName: "Install dependencies"
            inputs:
              command: "custom"
              workingDir: $(System.DefaultWorkingDirectory)
              customCommand: "install"

          - task: Npm@1
            displayName: "Run tests"
            inputs:
              command: "custom"
              workingDir: $(System.DefaultWorkingDirectory)
              customCommand: "run test:ci -- --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura"
            continueOnError: true

          - task: PublishTestResults@2
            displayName: "Publish jest unit test results"
            inputs:
              testResultsFiles: junit.xml
              mergeTestResults: true
              testRunTitle: "Jest Unit Tests"
              failTaskOnFailedTests: true

          - task: PublishCodeCoverageResults@1
            displayName: "Publish code coverage from Jest tests"
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml"
              failIfCoverageEmpty: true

      - job: Build
        dependsOn: Test
        condition: succeeded()
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
